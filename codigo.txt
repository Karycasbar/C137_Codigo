        const { url } = this.state;
    axios
      .get(url)
      .then((response) => {
        this.setState({
          listData: response.data.data,
        });
      })
      .catch((error) => {
        Alert.alert(error.message);
      });
----------------------------------------------------------
              <FlatList
                keyExtractor={this.keyExtractor}
                data={this.state.listData}
                renderItem={this.renderItem}
                numColumns={2}
              />
-----------------------------------------------------------------------------------
        onPress={() =>
          this.props.navigation.navigate("Details", { planet_name: item.name })
        }
----------------------------------------------------------------------------------------
`/planet?name=${this.props.navigation.getParam(
        "planet_name"
      )}`
---------------------------------------------------------------------------------------
          const { url } = this.state;
    axios
      .get(url)
      .then((response) => {
        this.setDetails(response.data.data);
      })
      .catch((error) => {
        Alert.alert(error.message);
      });
-----------------------------------------------------------------------------------
  render() {
    const { details, imagePath } = this.state;
    if (details.specifications) {
      return (
        <View style={styles.container}>
        <ScrollView>
          <ImageBackground
            source={require("../assets/bg.png")}
            style={{ flex: 1, paddingTop: 20 }}
          >
            <Image
              source={imagePath}
              style={{
                height: 250,
                width: 250,
                marginTop: 50,
                alignSelf: "center",
              }}
            />
            <View style={{ marginTop: 50 }}>
              <Text style={styles.planetName}>{details.name}</Text>
              <View style={{ alignSelf: "center" }}>
                <Text
                  style={styles.planetData}
                >{`Distancia a la tierra: ${details.distance_from_earth}`}</Text>
                <Text
                  style={styles.planetData}
                >{`Distancia al sol: ${details.distance_from_their_sun}`}</Text>
                <Text
                  style={styles.planetData}
                >{`Gravedad: ${details.gravity}`}</Text>
                <Text
                  style={styles.planetData}
                >{`Per√≠odo orbital: ${details.orbital_period}`}</Text>
                <Text
                  style={styles.planetData}
                >{`Velocidad orbital: ${details.orbital_speed.toFixed(8)}`}</Text>
                <Text
                  style={styles.planetData}
                >{`Masa del planeta: ${details.planet_mass}`}</Text>
                <Text
                  style={styles.planetData}
                >{`Radio del planeta: ${details.planet_radius}`}</Text>
                <Text
                  style={styles.planetData}
                >{`Tipo de planeta: ${details.planet_type}`}</Text>
                <View style={{ flexDirection: "row",alignSelf:"center" }}>
                  <Text style={styles.planetData}>
                    {details.specifications ? `Especificaciones: ` : ""}
                  </Text>
                  {details.specifications.map((item, index) => (
                    <Text key={index.toString()} style={styles.planetData}>
                      {item}
                    </Text>
                  ))}
                </View>
              </View>
            </View>
          </ImageBackground>
          </ScrollView>
        </View>
      );
    }
    return null;
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  planetName: {
    fontSize: 45,
    color: "white",
    fontWeight: "bold",
    textAlign: "center",
    marginBottom: 40,
    width: "80%",
    alignSelf: "center",
    fontFamily:"monospace"
  },
  planetData: {
    fontSize: 15,
    color: "white",
    textAlign:"center",
    fontFamily:"monospace"
  },
});
